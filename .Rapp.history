for (i in 1:length(reps.and.groups)) {#
			reps.and.groups[i,2] <- as.character(group.id[which(replicate.id==lev.rep[i])[1]])#
		}
reps.and.groups
reps.and.groups <- data.frame("replicates"=lev.rep,"group"=NA)
table(lev.rep,lev.group)
table(pids,groups)
table(pids,group)
reps.and.groups
lev.clust
lev.rep
lev.group
reps.and.groups <- cbind(group,pids)
dim(reps.and.groups)
reps.and.groups <- reps.and.groups[unique(reps.and.groups[,1]),]
unique(reps.and.groups[,1])
rep.group.ref <- cbind(group,pids)
reps.and.groups <- data.frame("replicates"=lev.rep,"group"=NA)
reps.group.ref[1:10,]
reps.group.ref[1:6,]
rep.group.ref[1:6,]
i <- 1
rep.group.ref[1:6,2][1]
rep.group.ref[reps.and.groups[1,2],2][1]
rep.group.ref[reps.and.groups[1,1],][1]
for (i in 1:length(reps.and.groups)) {#
		reps.and.groups[i,2] <- rep.group.ref[reps.and.groups[i,1],][1]#
		}
reps.and.groups
rep.group.ref <- cbind(group,pids)
reps.and.groups <- data.frame("replicates"=lev.rep,"group"=NA)
rep.group.ref[reps.and.groups[i,1],][1]
nrow(reps.and.groups)
for (i in 1:nrow(reps.and.groups)) {#
		reps.and.groups[i,2] <- rep.group.ref[reps.and.groups[i,1],][1]#
	}
reps.and.groups
reps.and.groups[i,1]
reps.and.groups[i,1] %in% rep.group.ref[,2]
match(rep.group.ref[,2],reps.and.groups[i,1])
rep.group.rep[match(rep.group.ref[,2],reps.and.groups[i,1]),2][1]
rep.group.ref[match(rep.group.ref[,2],reps.and.groups[i,1]),2][1]
rep.group.ref[match(rep.group.ref[,2],reps.and.groups[i,1]),2]
rep.group.ref[match(rep.group.ref[,2],reps.and.groups[i,1])[1],2]
rep.group.ref[match(reps.and.groups[i,1],rep.group.ref[,2])[1],2]
rep.group.ref[match(reps.and.groups[i,1],rep.group.ref[,2])[1],1]
reps.and.groups <- data.frame("replicates"=lev.rep,"group"=NA)#
#
	for (i in 1:nrow(reps.and.groups)) {#
		reps.and.groups[i,2] <- rep.group.ref[match(reps.and.groups[i,1],rep.group.ref[,2])[1],1]#
	}
reps.and.groups
devtools::install("~/Documents/Vignali Lab/packages/celltalker")
load('~/Desktop/B_cell_manuscript/4 Pseudotime analysis of B cells/lin1_gam_results_pval.19.08.16.RData')#
load('~/Desktop/B_cell_manuscript/4 Pseudotime analysis of B cells/lin2_gam_results_pval.19.08.16.RData')#
load('~/Desktop/B_cell_manuscript/4 Pseudotime analysis of B cells/lin3_gam_results_pval.19.08.16.RData')#
load('~/Desktop/B_cell_manuscript/4 Pseudotime analysis of B cells/lin4_gam_results_pval.19.08.16.RData')
ls()
lin1.sig <- lin1.gam.pval<0.01
lin1.sig
lin1.sig <- lin1.gam.pval[lin1.gam.pval<0.01]
lin1.sig
length(lig1.sig)
length(lin1.sig)
library(Seurat)
load('~/Desktop/B_cell_manuscript/5 Receptors and Ligands/b_cd4_filtered_analysis.19.07.28.RData')#
load('~/Desktop/B_cell_manuscript/5 Receptors and Ligands/b_cd4_metadata_updated.19.08.17.RData')
ls()
b.cd4 <- AddMetaData(b.cd4,metadata=b.cd4.metadata)
DimPlot(b.cd4,reduction.use="FItSNE")
colnames(b.cd4@meta.data)
DimPlot(b.cd4,reduction.use="FItSNE",group.by="tree.ident")
load('~/Desktop/B_cell_manuscript/5 Receptors and Ligands/b_cd4_filtered_analysis.19.07.28.RData')
DimPlot(b.cd4,reduction.use="FItSNE",group.by="tree.ident")
DimPlot(b.cd4,reduction.use="FItSNE",group.by="tree.ident",do.label=T)
colnames(b.cells.metadata)
colnames(b.cd4.metadata)
table(b.cd4.metadata$tree.ident)
library(Seurat)
load("/Users/arc85/Desktop/b_cd4_filtered_analysis.19.07.25.RData")
DimPlot(b.cd4,reduction.use="FItSNE",group.by="tree.ident")
DimPlot(b.cd4,reduction.use="FItSNE",group.by="tree.ident",do.label=T)
meta.dat <- read.csv("~/Desktop/B_cell_manuscript/0_Scripts_for_figures/Supplementary Figure 5/SampleOverview_hpv_status.19.06.05.txt")
melted.dat <- melt(meta.dat)
library(reshape2)#
library(ggplot2)
melted.dat <- melt(meta.dat)
head(melted.dat)
meta.dat <- read.csv("~/Desktop/B_cell_manuscript/0_Scripts_for_figures/Supplementary Figure 5/SampleOverview_hpv_status.19.06.05.txt",sep="\t")
melted.dat <- melt(meta.dat)
head(melted.dat)
table(melted.dat$locus)
facet_wrap(~variable,scales="free")
p1 <- ggplot(melted.dat) + geom_violin(aes(x=sample_tags,y=value)) +#
	facet_wrap(~variable,scales="free")
p1
p1 <- ggplot(melted.dat) + geom_boxplot(aes(x=sample_tags,y=value)) +#
	facet_wrap(~variable,scales="free")
p2
p1
p1 <- ggplot(melted.dat) + geom_boxplot(aes(x=sample_tags,y=value)) +#
	geom_point(aes(x=sample_tags,y=value)) +#
	facet_wrap(~variable,scales="free")
p1
p1 <- ggplot(melted.dat) + geom_boxplot(aes(x=sample_tags,y=value)) +#
	geom_jitter(width=0.1,aes(x=sample_tags,y=value)) +#
	facet_wrap(~variable,scales="free")
p1
p1 <- ggplot(melted.dat) + geom_boxplot(aes(x=sample_tags,y=value)) +#
	geom_jitter(width=0.1,aes(x=sample_tags,y=value)) +#
	facet_wrap(~variable,scales="free") +#
	theme_bw()
p1
p2 <- ggplot(melted.dat[melted.dat$variable=="productive_clonality",]) + geom_point(aes(x=sample_tags,y=value))
;2
p2
p2 <- ggplot(melted.dat[melted.dat$variable=="productive_clonality",]) + #
	geom_boxplot(aes(x=sample_tags,y=value)) +#
	geom_point(aes(x=sample_tags,y=value)) +#
	theme_bw()
p2
p2 <- ggplot(melted.dat[melted.dat$variable=="productive_clonality",]) + #
	geom_boxplot(aes(x=sample_tags,y=value)) +#
	geom_jitter(width=0.1,aes(x=sample_tags,y=value)) +#
	theme_bw()
p2
p1
p3 <- ggplot(melted.dat[melted.dat$variable=="max_productive_frequency",]) + geom_point(aes(x=sample_tags,y=value))
p3
p3 <- ggplot(melted.dat[melted.dat$variable=="max_productive_frequency",]) + #
	geom_boxplot(aes(x=sample_tags,y=value)) +#
	geom_point(aes(x=sample_tags,y=value))
p3
wilcox.test(meta.dat[meta.dat$sample_tags=="hpv_neg","max_productive_frequency"],meta.dat[melted.dat$sample_tags=="hpv_pos","max_productive_frequency"])
p1
library(tidyverse)
head(melted.dat)
meta.stats %>% split(.,variable)
meta.dat %>% split(.,variable) %>%
s
meta.dat %>% split(.,variable)
meta.dat %>% split(.$variable)
meta.dat %>% split(meta.dat$variable)
meta.dat %>% split(.,meta.dat$variable)
meta.dat %>% split(.$variable)
split(.$variable)
split(meta.dat$variable)
meta.dat %>% split(.,variable)
meta.dat %>% split(.,.$variable)
meta.dat %>% group_by(variable)
colnames(meta.at)
colnames(meta.dat)
melted.dat %>% group_by(variable)
melted.dat %>% group_by(variable) %>% map(.,function(x,y) wilcox.test(x$hpv_pos,y$hpv_neg))
melted.split <- split(melted.dat,variable)
head(melted.dat)
melted.split <- split(melted.dat,.$variable)
melted.split <- split(melted.dat,melted.dat$variable)
length(melted.split)
head(melted.split[[1]])
melted.split %>% group.by(variable)
melted.split %>% group_by(variable)
melted.split %>% map(~group_by(sample_tags))
melted.split %>% map(.,~group_by(sample_tags))
melted.split
map(melted.split,~group_by(sample_tags))
map(melted.split,group_by(sample_tags))
melted.split[[1]]
group_by(sample_tags)
map(melted.split,function(x) group_by(x$sample_tags))
group_by(x$sample_tags)
melted.split <- split(melted.dat,melted.dat$variable)
melted.split
melted.split[[1]] %>% group_by(sample_tags)
melted.split[[1]] %>% split(.,.$sample_tags)
melted.split[[1]] %>% split(.,.$sample_tags) %>% map2(.,.,~wilcox.test(x[[1]]$value,x[[2]]$value)
)
melted.split[[1]] %>% split(.,.$sample_tags) %>% map2(.,.,~wilcox.test(x$value,y$value))
melted.split[[1]] %>% split(.,.$sample_tags) %>% map2(.,.,~wilcox.test(.$value,.$value))
melted.split[[1]] %>% split(.,.$sample_tags) %>% map2(.,.,~wilcox.test(.x$value,.y$value))
melted.split[[1]]
melted.split[[1]] %>% split(.,.$sample_tags)
test <- melted.split[[1]] %>% split(.,.$sample_tags)
wilcox.test(test[[1]]$value,test[[2]]$value)
melted.split[[1]] %>% split(.,.$sample_tags) %>% map2(.x,.y,~wilcox.test(.x$value,.y$value))
by_tag <- melted.split %>% split(.,.$sample_tags)
by_tag <- melted.dat %>% split(.,.$sample_tags)
by_tah
by_tag
by_tag <- melted.dat %>% split(.,.$variable)
by_tag
by_samp <- by_tag %>% split(.,.$sample_tags)
by_tag
by_samp <- by_tag %>% map(~split(.,.$sample_tags))
by_samp
wil.test <- by_samp %>% map2(by_samp[[1]]$value,by_samp[[2]]$value,~wilcox.test())
wil.test <- by_samp %>% map2(by_samp[[1]]$value,by_samp[[2]]$value,~wilcox.test
)
by_samp
map2(by_samp[[1]]$value,by_samp[[2]]$value)
map2(by_samp[[1]]$value,by_samp[[2]]$value,~wilcox.test())
map2(by_samp[[1]]$value,by_samp[[2]]$value,~wilcox.test
)
head(melted.dat)
by_tag <- gather(melted.dat,value,-variable)
by_tag <- gather(melted.dat,value,~variable)
by_tag <- gather(melted.dat,value,variable)
by_tag
by_tag <- melted.dat %>% split(.,.$variable)#
by_samp <- by_tag %>% map(~split(.,.$sample_tags))
by_tag <- melted.dat %>% split(.,.$variable)
by_tag
mutate(pval=map_dbl(by_tag,~wilcox.test(value~sample_tags,data=.)))
mutate(by_tag,pval=map_dbl(by_tag,~wilcox.test(value~sample_tags,data=.)))
melted.dat %>% split(.,.$variable) %>% mutate(pval=map_dbl(by_tag,~wilcox.test(value~sample_tags,data=.)))
melted.dat %>% nest(.,.$variable) %>% mutate(pval=map_dbl(by_tag,~wilcox.test(value~sample_tags,data=.)))
melted.dat
library(Seurat)
?NormalizeData
library(scatterplot3d)
?scatterplot3d()
?mst
library(igraph)
?mst
library(ape)
?mst
?graph_adjacency
?graph.adjacency
?heatmap3
library(heatmap3)
?heatmap3
library(princurv)
library(principalcurve)
?principal_curve
??principal_curve
library(cowplot)
43/7
1470*0.67
1320*0.67
1320*0.67/5
1120*0.67
1120*0.67/4
help(package="tidyverse")
help(package="geomnet")
help(package="heatmap3")
help(package="Seurat")
library(heatmap3)
help(package="heatmap3")
?legend
help(package="igraph")
library(RColorBrewer)
brewer.pal
brewer.pal()
?brewer.pal()
library(tidyverse)
?reshape
?reorder
tidyverse::reorder
tidyverse::recode
?tidyverse::recode
?recode
at <- c(seq("A",10),seq("B",10))
at <- c(rep("A",10),rep("B",10))
at
group1 <- c("A","B")
group1
group2 <- c("col1","col2")
group2
recode(at,from=group1,to=group2)
recode(at,!!! SetNames(group1,group2))
recode(at,!!! setNames(group1,group2))
recode(at,!!! setNames(group2,group1))
?heatmap3
?showLegend
library(rmarkdown)
render("~/Desktop/new_celltalker/celltalker/vignettes/celltalker.Rmd",output_format="html",output_file="celltalker_vignette.19.08.25.html",output_dir="/Users/arc85/Desktop/")
?render
render("~/Desktop/new_celltalker/celltalker/vignettes/celltalker.Rmd",output_file="celltalker_vignette.19.08.25.html",output_dir="/Users/arc85/Desktop/")
setwd("/Users/arc85/Desktop/new_celltalker/celltalker")
library(devtools)
devtools::document()
install()
q()
